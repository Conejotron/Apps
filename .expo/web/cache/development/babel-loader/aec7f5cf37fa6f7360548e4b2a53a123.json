{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Flatlist } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      item = _useState2[0],\n      setItem = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemList = _useState4[0],\n      setItemList = _useState4[1];\n\n  var inputvalue = item.trim();\n\n  var onChangeText = function onChangeText(text) {\n    setItem(text);\n  };\n\n  var addItem = function addItem() {\n    if (inputvalue) {\n      setItemList([].concat(_toConsumableArray(itemList), [{\n        id: Math.random().toString(),\n        value: item\n      }]));\n      setItem('');\n    }\n  };\n\n  var onDeleteItem = function onDeleteItem(id) {\n    console.log(id);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: styles.itemContainer,\n      children: [_jsx(Text, {\n        style: styles.item,\n        children: item.value\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return onDeleteItem(item.id);\n        },\n        children: _jsx(Text, {\n          style: styles.delete,\n          children: \"X\"\n        })\n      })]\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#e5d4ed\",\n        placeholder: \"add item\",\n        value: item,\n        onChangeText: onChangeText\n      }), _jsx(Button, {\n        title: \"Add\",\n        color: \"#1d1128\",\n        onPress: addItem,\n        disabled: inputvalue === ''\n      })]\n    }), _jsx(View, {\n      style: styles.itemlist,\n      children: _jsx(Flatlist, {\n        data: itemList,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#6d72c3'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 30,\n    paddingHorizontal: 20,\n    alignItems: 'center'\n  },\n  input: {\n    width: '80%',\n    borderBottomWidth: 1,\n    paddingVertical: 10,\n    borderBottomColor: '#5941a9',\n    marginVertical: 20\n  },\n  itemList: {},\n  itemContainer: {},\n  item: {}\n});","map":{"version":3,"names":["Flatlist","React","useState","App","item","setItem","itemList","setItemList","inputvalue","trim","onChangeText","text","addItem","id","Math","random","toString","value","onDeleteItem","console","log","renderItem","styles","itemContainer","delete","container","inputContainer","input","itemlist","StyleSheet","create","flex","backgroundColor","flexDirection","justifyContent","paddingVertical","paddingHorizontal","alignItems","width","borderBottomWidth","borderBottomColor","marginVertical"],"sources":["C:/ProyectoAplicaciones/my-app/App.js"],"sourcesContent":["import { Button, FlatList, Flatlist, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport React, { useState } from 'react'\n\nexport default function App() {\n  const [item, setItem] = useState('');\n  const [itemList, setItemList] = useState([]);\n  \n  const inputvalue = item.trim();\n  \n  const onChangeText = (text) => {\n    setItem(text);\n  }\n\n  const addItem = () => {\n    if (inputvalue) {\n      setItemList([\n        ...itemList,\n        {\n          id: Math.random().toString(),\n          value: item\n        } \n      ])\n      setItem('');\n    }\n}\n\nconst onDeleteItem = (id) => {\n  console.log(id)\n}\n\nconst renderItem = ({ item }) => (\n  <View style={styles.itemContainer}>\n    <Text style={styles.item}>{item.value}</Text>\n    <TouchableOpacity onPress={() => onDeleteItem(item.id)}>\n      <Text style={styles.delete}>X</Text>\n    </TouchableOpacity>\n  </View>\n)\n  \n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <TextInput \n        style={styles.input}\n        placeholderTextColor='#e5d4ed' \n        placeholder='add item'\n        value={item}\n        onChangeText={onChangeText}\n        />\n        <Button title='Add' color='#1d1128' onPress={addItem} disabled={inputvalue === ''}/>\n      </View>\n      <View style={styles.itemlist}>      \n       <Flatlist\n       data={itemList}\n       renderItem={renderItem}\n       keyExtractor={(item) => item.id}\n       />     \n      </View>          \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#6d72c3',\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 30,\n    paddingHorizontal: 20,\n    alignItems: 'center',    \n  },\n  input: {\n    width: '80%',\n    borderBottomWidth: 1,\n    paddingVertical: 10,\n    borderBottomColor: '#5941a9',\n    marginVertical: 20,\n  },\n  itemList: {},\n  itemContainer: {},\n  item: {}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}